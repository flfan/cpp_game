# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Checkout submodules
      run: git submodule update --init --recursive --depth 1

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target cppGame -j 12 --

    - name: package
      working-directory: ${{github.workspace}}/build
      run: |
        mkdir -p package
        cp -r bin/ package/
        tar -czf cppGame-linux.tar.gz -C package .
        # 1. 先上传为 Artifact（可选，调试用）

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: cppGame-linux
        path: ${{github.workspace}}/build/cppGame-linux.tar.gz

    # 2. 真正发布到 GitHub Release
    # 仅当 push tag 时才触发；如果你希望每次 push main 都发，可删掉 if
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/build/cppGame-linux.tar.gz
        tag_name: ${{ github.ref_name }}          # 使用 tag 名
        name: Release ${{ github.ref_name }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

