# AI助手指导

## 核心原则

当帮助用户开发这个项目时，请始终遵循以下原则：

## 开发标准

1. **始终遵循C++17标准**
   - 使用现代C++特性
   - 避免过时的C++98/03语法

2. **使用现代C++最佳实践**
   - 优先使用智能指针
   - 使用RAII管理资源
   - 利用constexpr和const

3. **遵循项目的命名约定**
   - 类名: PascalCase
   - 函数名: camelCase
   - 变量名: camelCase
   - 常量: UPPER_CASE

## 代码质量要求

4. **使用clang-format和clang-tidy保持代码质量**
   - 自动格式化代码
   - 静态分析检查
   - 性能优化建议

5. **为所有公共接口添加Doxygen注释**
   - 函数说明
   - 参数描述
   - 返回值说明
   - 使用示例

6. **编写相应的单元测试**
   - 使用Google Test框架
   - 覆盖主要功能
   - 测试边界条件

## 技术选择

7. **使用CMake作为构建系统**
   - 跨平台支持
   - 依赖管理
   - 测试集成

8. **保持代码的可读性和可维护性**
   - 清晰的函数结构
   - 有意义的变量名
   - 适当的注释

## 代码审查重点

- 检查C++17特性使用
- 验证智能指针使用
- 确认RAII模式
- 检查异常安全性
- 验证测试覆盖 description: globs: alwaysApply: false

---
